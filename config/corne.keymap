/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        tilde: tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tilde &kp TILDE>;
            label = "TILDE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I       &kp O    &kp P     &kp LBKT
&kp ESCAPE  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K       &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp LEFT_ALT
                          &kp LCMD  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RSHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8          &kp N9     &kp N0  &kp BSPC
&kp LEFT_SHIFT  &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT  &trans  &trans
&kp LSHFT       &trans  &trans  &trans    &trans  &trans       &trans    &trans    &trans          &trans     &trans  &kp LEFT_ALT
                                &kp LGUI  &trans  &kp SPACE    &kp RET   &trans    &kp LEFT_SHIFT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL         &kp AT        &kp LS(N8)      &kp LS(N9)      &kp SQT         &kp LS(N7)         &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RPAR  &kp BSPC
&kp LCTRL  &kp C_VOLUME_UP  &kp C_VOL_DN  &kp LA(LS(N8))  &kp LA(LS(N9))  &kp NUMBER_2    &kp LS(LA(MINUS))  &kp EQUAL  &kp LBKT              &kp RBKT               &kp BSLH  &kp BACKSLASH
&kp LSHFT  &trans           &trans        &kp LA(N8)      &kp LA(N9)      &trans          &kp LA(N7)         &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE  &kp RA(RIGHT_BRACKET)
                                          &kp LGUI        &trans          &kp SPACE       &kp RET            &trans     &kp RALT
            >;
        };
    };
};
